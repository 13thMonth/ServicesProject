<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--只扫描controller 不扫描spring的注解-->
    <!--java bean可重用的件  beans里面肯定可以配置很多可以重用的组件-->
    <!--扫描注解让SpringMVC的注解生效
      例如:@Controller、@Service、@Component、@Repository等注解
    -->
    <context:annotation-config/>  
    <!--Spring MVC只扫描Controller-->
    <context:component-scan base-package="cn.echo.*" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
 <!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
    <!-- springmvc使用<mvc:annotation-driven> -->
    <!-- 自动加载RequestMappingHandlerMapping和RequestMappingHandlerAdapter， -->
    <!-- 可用在springmvc.xml配置文件中使用<mvc:annotation-driven>替代注解处理器和适配器的配置。 -->
    <!--如果说上面已经配置好但是请求还不能请求到一定要配置下面的这个注解-->
    <mvc:annotation-driven/>


    <!-- 自定义转换器 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!--日期转换器-->
                <bean class="cn.echo.common.utils.DateConvert"/>
            </set>
        </property>
    </bean>

    <!-- springmvc使用<mvc:annotation-driven> -->
    <!-- 自动加载RequestMappingHandlerMapping和RequestMappingHandlerAdapter， -->
    <!-- 可用在springmvc.xml配置文件中使用<mvc:annotation-driven>替代注解处理器和适配器的配置。
      遇到日期格式就会自动处理
     -->
    <mvc:annotation-driven conversion-service="conversionService"/>





    <!--对象自动转json同时配置日期转换对于接口如果不配置或者配置了日期格式和下面配置的日期格式
   不一致会出现400错误-->
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <!--日期格式化-->
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
                <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
                <property name="prettyPrint" value="true"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>




    <!--不让SpringMVC的DispatcherServlet过滤静态文件和Servlet-->
    <!--mapping浏览器请求的url地址-->
    <!--location静态资源位置20180915-->
    <!-- <mvc:resources mapping="/static/**" location="/static/"/> -->
    <!--可以转发那些SpringMVC @RequestMapping找不到到的映射-->
    <mvc:default-servlet-handler/>


    <!--mvc配置首页面 controller层的一个路径@RequestMapping("index.html")-->
    <mvc:view-controller path="/" view-name="redirect:/index.html"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/modules/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--文件上传配置-->
    <!--文件视图解析器配置文件最大上传大小 最大文件大小10M =1024*1024*10=10485760-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760"/>
    </bean>



    <!-- 配置 JSR303 Bean Validator 定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />



</beans>